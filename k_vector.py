import numpy as np
import math

def k_vector(xi, yi, H, LEDp, nglass, t, theta, xint, yint, total):
    kx = np.zeros((total,1), dtype=float)
    ky = np.copy(kx)
    NAt = np.copy(kx)

    for tt in range(total):
        x0 = xint + xi[tt,0] * LEDp
        y0 = yint + yi[tt,0] * LEDp
        x1 = x0 * math.cos(theta*math.pi/180) - y0 * math.sin(theta*math.pi/180)
        y1 = x0 * math.sin(theta*math.pi/180) - y0 * math.cos(theta*math.pi/180)
        kx[tt,0], ky[tt,0], NAt[tt,0] = calculate(x1,y1,H,t,nglass)
    return kx, ky, NAt

def calculate(x0, y0, H, h, n):
    l = math.sqrt(x0**2 + y0**2)
    thetal = math.atan2(y0, x0)

    xoff = 0
    thetag = -math.asin(l / math.sqrt(l**2 + H**2) / n)
    xint = h * math.tan(thetag)
    xoff = xoff-xint

    while abs(xint) > 0.001:
        thetag = -math.asin((l-xoff) / math.sqrt((l-xoff)**2 + H**2) / n)
        xint = xoff + h * math.tan(thetag)
        xoff = xoff - xint

    theta = math.asin((l-xoff) / math.sqrt((l-xoff)**2 + H**2))

    NAt = abs(math.sin(theta))
    kx = -NAt * math.cos(thetal)
    ky = -NAt * math.sin(thetal)
    return kx, ky, NAt

#xi = np.array([[ 0  ,   1  ,   1 ,    0 ,   -1 ,   -1 ,   -1 ,    0  ,   1 ,    2  ,   2 ,    2 ,    2  ,   1 ,    0 ,   -1 ,   -2 ,   -2 ,   -2 ,   -2 ,   -2 ,   -1, 0  ,   1  ,   2 ,    3 ,    3 ,    3 ,    3 ,    3  ,   3 ,    2  ,   1 ,    0 ,   -1  ,  -2 ,   -3 ,   -3 ,   -3 ,   -3 ,   -3 ,   -3 ,   -3 ,   -2, -1  ,   0  ,   1 ,    2 ,    3 ,    4 ,    4 ,    4  ,   4 ,    4  ,   4 ,    4 ,    4  ,   3 ,    2 ,    1 ,    0 ,   -1 ,   -2 ,   -3 ,   -4 ,   -4, -4  ,  -4  ,  -4 ,   -4 ,   -4 ,   -4 ,   -4 ,   -3  ,  -2 ,   -1  ,   0 ,    1 ,    2  ,   3 ,    4 ,    5 ,    5 ,    5 ,    5 ,    5 ,    5 ,    5, 5  ,   5  ,   5 ,    4 ,    3 ,    2 ,    1 ,    0  ,  -1 ,   -2  ,  -3 ,   -4 ,   -5  ,  -5 ,   -5 ,   -5 ,   -5 ,   -5 ,   -5 ,   -5 ,   -5 ,   -5, -5  ,  -4  ,  -3 ,   -2 ,   -1 ,    0 ,    1 ,    2  ,   3 ,    4  ,   5 ,    6 ,    6  ,   6 ,    6 ,    6 ,    6 ,    6 ,    6 ,    6 ,    6 ,    6, 6  ,   5  ,   4 ,    3 ,    2 ,    1 ,    0 ,   -1  ,  -2 ,   -3  ,  -4 ,   -5 ,   -6  ,  -6 ,   -6 ,   -6 ,   -6 ,   -6 ,   -6 ,   -6 ,   -6 ,   -6, -6  ,  -6  ,  -6 ,   -5 ,   -4 ,   -3 ,   -2 ,   -1  ,   0 ,    1  ,   2 ,    3 ,    4  ,   5 ,    6 ,    7 ,    7 ,    7 ,    7 ,    7 ,    7 ,    7, 7  ,   7  ,   7 ,    7 ,    7 ,    7 ,    7 ,    6  ,   5 ,    4  ,   3 ,    2 ,    1  ,   0 ,   -1 ,   -2 ,   -3 ,   -4 ,   -5 ,   -6 ,   -7 ,   -7, -7  ,  -7  ,  -7 ,   -7 ,   -7 ,   -7 ,   -7 ,   -7  ,  -7 ,   -7  ,  -7 ,   -7 ,   -7  ,  -6 ,   -5 ,   -4 ,   -3 ,   -2 ,   -1 ,    0 ,    1 ,    2, 3   ,  4   ,  5   ,  6   ,  7]])
xi = np.array([[0,1,1,0,-1,-1,-1,0,1,2,2,2,2,1,0,-1,-2,-2,-2,-2,-2,-1,0,1,2,3,3,3,3,3,3,2,1,0,-1,-2,-3,-3,-3,-3,-3,-3,-3,-2,-1,0,1,2,3,4,4,4,4,4,4,4,4,3,2,1,0,-1,-2,-3,-4,-4,-4,-4,-4,-4,-4,-4,-4,-3,-2,-1,0,1,2,3,4,5,5,5,5,5,5,5,5,5,5,4,3,2,1,0,-1,-2,-3,-4,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,6,6,6,6,6,6,6,6,6,6,6,5,4,3,2,1,0,-1,-2,-3,-4,-5,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,5,4,3,2,1,0,-1,-2,-3,-4,-5,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7]])
#yi = np.array([[ 0  ,   0 ,    1 ,    1 ,    1 ,    0 ,   -1  ,  -1 ,   -1 ,   -1  ,   0  ,   1 ,    2  ,   2  ,   2  ,   2   ,  2  ,   1  ,   0 ,   -1 ,   -2  ,  -2, -2  ,  -2 ,   -2 ,   -2 ,   -1 ,    0 ,    1  ,   2 ,    3 ,    3  ,   3  ,   3 ,    3  ,   3  ,   3  ,   2   ,  1  ,   0  ,  -1 ,   -2 ,   -3  ,  -3, -3  ,  -3 ,   -3 ,   -3 ,   -3 ,   -3 ,   -2  ,  -1 ,    0 ,    1  ,   2  ,   3 ,    4  ,   4  ,   4  ,   4   ,  4  ,   4  ,   4 ,    4 ,    4  ,   3, 2  ,   1 ,    0 ,   -1 ,   -2 ,   -3 ,   -4  ,  -4 ,   -4 ,   -4  ,  -4  ,  -4 ,   -4  ,  -4  ,  -4  ,  -4   , -3  ,  -2  ,  -1 ,    0 ,    1  ,   2, 3  ,   4 ,    5 ,    5 ,    5 ,    5 ,    5  ,   5 ,    5 ,    5  ,   5  ,   5 ,    5  ,   4  ,   3  ,   2   ,  1  ,   0  ,  -1 ,   -2 ,   -3  ,  -4, -5  ,  -5 ,   -5 ,   -5 ,   -5 ,   -5 ,   -5  ,  -5 ,   -5 ,   -5  ,  -5  ,  -5 ,   -4  ,  -3  ,  -2  ,  -1   ,  0  ,   1  ,   2 ,    3 ,    4  ,   5, 6  ,   6 ,    6 ,    6 ,    6 ,    6 ,    6  ,   6 ,    6 ,    6  ,   6  ,   6 ,    6  ,   5  ,   4  ,   3   ,  2  ,   1  ,   0 ,   -1 ,   -2  ,  -3, -4  ,  -5 ,   -6 ,   -6 ,   -6 ,   -6 ,   -6  ,  -6 ,   -6 ,   -6  ,  -6  ,  -6 ,   -6  ,  -6  ,  -6  ,  -6   , -5  ,  -4  ,  -3 ,   -2 ,   -1  ,   0, 1  ,   2 ,    3 ,    4 ,    5 ,    6 ,    7  ,   7 ,    7 ,    7  ,   7  ,   7 ,    7  ,   7  ,   7  ,   7   ,  7  ,   7  ,   7 ,    7 ,    7  ,   6, 5  ,   4 ,    3 ,    2 ,    1 ,    0 ,   -1  ,  -2 ,   -3 ,   -4  ,  -5  ,  -6 ,   -7  ,  -7  ,  -7  ,  -7   , -7  ,  -7  ,  -7 ,   -7 ,   -7  ,  -7, -7 ,   -7 ,   -7 ,   -7 ,   -7 ]])
yi = np.array([[0,0,1,1,1,0,-1,-1,-1,-1,0,1,2,2,2,2,2,1,0,-1,-2,-2,-2,-2,-2,-2,-1,0,1,2,3,3,3,3,3,3,3,2,1,0,-1,-2,-3,-3,-3,-3,-3,-3,-3,-3,-2,-1,0,1,2,3,4,4,4,4,4,4,4,4,4,3,2,1,0,-1,-2,-3,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-3,-2,-1,0,1,2,3,4,5,5,5,5,5,5,5,5,5,5,5,4,3,2,1,0,-1,-2,-3,-4,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,6,6,6,6,6,6,6,6,6,6,6,6,5,4,3,2,1,0,-1,-2,-3,-4,-5,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,5,4,3,2,1,0,-1,-2,-3,-4,-5,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7]])
kx,ky,NAt = k_vector(np.transpose(xi),np.transpose(yi),90.88,4,1.52,1,0,0,0,225)
print(kx)
print(xi.shape)
